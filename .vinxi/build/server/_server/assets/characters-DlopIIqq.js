import{promises as S}from"fs";import{join as j}from"path";import{i as m,g as b,s as y,a as E,b as O}from"./server-DT3i-Qqa.js";import"node:async_hooks";import"h3";function _(e){if(Array.isArray(e))return e.flatMap(u=>_(u));if(typeof e!="string")return[];const n=[];let t=0,r,s,o,i,a;const c=()=>{for(;t<e.length&&/\s/.test(e.charAt(t));)t+=1;return t<e.length},l=()=>(s=e.charAt(t),s!=="="&&s!==";"&&s!==",");for(;t<e.length;){for(r=t,a=!1;c();)if(s=e.charAt(t),s===","){for(o=t,t+=1,c(),i=t;t<e.length&&l();)t+=1;t<e.length&&e.charAt(t)==="="?(a=!0,t=i,n.push(e.slice(r,o)),r=t):t=o+1}else t+=1;(!a||t>=e.length)&&n.push(e.slice(r,e.length))}return n}function T(e){return e instanceof Headers?new Headers(e):Array.isArray(e)?new Headers(e):typeof e=="object"?new Headers(e):new Headers}function M(...e){return e.reduce((n,t)=>{const r=T(t);for(const[s,o]of r.entries())s==="set-cookie"?_(o).forEach(a=>n.append("set-cookie",a)):n.set(s,o);return n},new Headers)}function p(e,n){const t=n||e||{};return typeof t.method>"u"&&(t.method="GET"),{options:t,middleware:r=>p(void 0,Object.assign(t,{middleware:r})),validator:r=>p(void 0,Object.assign(t,{validator:r})),type:r=>p(void 0,Object.assign(t,{type:r})),handler:(...r)=>{const[s,o]=r;Object.assign(t,{...s,extractedFn:s,serverFn:o});const i=[...t.middleware||[],H(t)];return Object.assign(async a=>g(i,"client",{...s,...t,data:a?.data,headers:a?.headers,signal:a?.signal,context:{}}).then(c=>{if(t.response==="full")return c;if(c.error)throw c.error;return c.result}),{...s,__executeServer:async(a,c)=>{const l=a instanceof FormData?I(a):a;l.type=typeof t.type=="function"?t.type(l):t.type;const u={...s,...l,signal:c},h=()=>g(i,"server",u).then(d=>({result:d.result,error:d.error,context:d.sendContext}));if(u.type==="static"){let d;if(f?.getItem&&(d=await f.getItem(u)),d||(d=await h().then(w=>({ctx:w,error:null})).catch(w=>({ctx:void 0,error:w})),f?.setItem&&await f.setItem(u,d)),m(d),d.error)throw d.error;return d.ctx}return h()}})}}}async function g(e,n,t){const r=N([...b,...e]),s=async o=>{const i=r.shift();if(!i)return o;i.options.validator&&(n!=="client"||i.options.validateClient)&&(o.data=await x(i.options.validator,o.data));const a=n==="client"?i.options.client:i.options.server;return a?R(a,o,async c=>s(c).catch(l=>{if(E(l)||O(l))return{...c,error:l};throw l})):s(o)};return s({...t,headers:t.headers||{},sendContext:t.sendContext||{},context:t.context||{}})}let f;function A(e){const n=f;return f=typeof e=="function"?e():e,()=>{f=n}}A(()=>{const e=(r,s)=>`/__tsr/staticServerFnCache/${r.functionId}__${s}.json`,n=r=>JSON.stringify(r??"",(i,a)=>a&&typeof a=="object"&&!Array.isArray(a)?Object.keys(a).sort().reduce((c,l)=>(c[l]=a[l],c),{}):a).replace(/[/\\?%*:|"<>]/g,"-").replace(/\s+/g,"_"),t=typeof document<"u"?new Map:null;return{getItem:async r=>{if(typeof document>"u"){const s=n(r.data),o=e(r,s),i="/Users/martinrodriguez/personal/guesser-game/dist",{promises:a}=await import("node:fs"),l=(await import("node:path")).join(i,o),[u,h]=await a.readFile(l,"utf-8").then(d=>[y.parse(d),null]).catch(d=>[null,d]);if(h&&h.code!=="ENOENT")throw h;return u}},setItem:async(r,s)=>{const{promises:o}=await import("node:fs"),i=await import("node:path"),a=n(r.data),c=e(r,a),u=i.join("/Users/martinrodriguez/personal/guesser-game/dist",c);await o.mkdir(i.dirname(u),{recursive:!0}),await o.writeFile(u,y.stringify(s))},fetchItem:async r=>{const s=n(r.data),o=e(r,s);let i=t?.get(o);return i||(i=await fetch(o,{method:"GET"}).then(a=>a.text()).then(a=>y.parse(a)),t?.set(o,i)),i}}});function I(e){const n=e.get("__TSR_CONTEXT");if(e.delete("__TSR_CONTEXT"),typeof n!="string")return{context:{},data:e};try{return{context:y.parse(n),data:e}}catch{return{data:e}}}function N(e){const n=new Set,t=[],r=s=>{s.forEach(o=>{o.options.middleware&&r(o.options.middleware),n.has(o)||(n.add(o),t.push(o))})};return r(e),t}const R=async(e,n,t)=>e({...n,next:async(r={})=>t({...n,...r,context:{...n.context,...r.context},sendContext:{...n.sendContext,...r.sendContext??{}},headers:M(n.headers,r.headers),result:r.result!==void 0?r.result:n.response==="raw"?r:n.result,error:r.error??n.error})});function x(e,n){if(e==null)return{};if("~standard"in e){const t=e["~standard"].validate(n);if(t instanceof Promise)throw new Error("Async validation not supported");if(t.issues)throw new Error(JSON.stringify(t.issues,void 0,2));return t.value}if("parse"in e)return e.parse(n);if(typeof e=="function")return e(n);throw new Error("Invalid validator type!")}function H(e){return{_types:void 0,options:{validator:e.validator,validateClient:e.validateClient,client:async({next:n,sendContext:t,...r})=>{var s;const o={...r,context:t,type:typeof r.type=="function"?r.type(r):r.type};if(r.type==="static"&&typeof document<"u"){m(f);const a=await f.fetchItem(o);if(a){if(a.error)throw a.error;return n(a.ctx)}`${o.functionId}${JSON.stringify(o.data)}`}const i=await((s=e.extractedFn)==null?void 0:s.call(e,o));return n(i)},server:async({next:n,...t})=>{var r;const s=await((r=e.serverFn)==null?void 0:r.call(e,t));return n({...t,result:s})}}}}function $(e){return e.replace(/^\/|\/$/g,"")}const C=(e,n,t)=>{m(t);const r=`/${$(n)}/${e}`;return Object.assign(t,{url:r,functionId:e})};let v=null;async function F(){if(v)return v;try{const e=j(process.cwd(),"public","characters.json"),n=await S.readFile(e,"utf-8"),t=JSON.parse(n);return v=t,t}catch(e){return console.error("Error loading characters:",e),[]}}const U=C("src_api_characters_ts--getCharacters_createServerFn_handler","/_server",(e,n)=>G.__executeServer(e,n)),z=C("src_api_characters_ts--getRandomCharacter_createServerFn_handler","/_server",(e,n)=>J.__executeServer(e,n)),G=p({method:"GET"}).handler(U,async()=>F()),J=p({method:"GET"}).handler(z,async()=>{const e=await F();return e.length===0?null:e[Math.floor(Math.random()*e.length)]});export{U as getCharacters_createServerFn_handler,z as getRandomCharacter_createServerFn_handler};
